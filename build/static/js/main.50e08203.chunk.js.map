{"version":3,"sources":["components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/action.types.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["MenuToggle","props","cls","isOpen","push","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","label","this","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHanndler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","answerNumber","question","quizLength","Button","clas","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","renderInputs","isLogin","console","log","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"wkBA0BeA,G,YAvBI,SAAAC,GACjB,IAAMC,EAAM,CACV,aACA,MAUF,OAPGD,EAAME,QACPD,EAAIE,KAAK,YACTF,EAAIE,KAAK,SAETF,EAAIE,KAAK,WAIT,uBACEC,UAAWH,EAAII,KAAK,KACpBC,QAASN,EAAMO,a,gBCdNC,G,MAFE,SAAAR,GAAK,OAAI,yBAAKI,UAAU,WAAWE,QAASN,EAAMM,YC2DpDG,E,4MArDbC,aAAe,WACb,EAAKV,MAAMW,W,0DAGDC,GAAQ,IAAD,OACjB,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CACEE,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,gBAAiB,SACjBb,QAAS,EAAKI,cAEbI,EAAKM,a,+BAQd,IAAMnB,EAAM,CAAC,UAEToB,KAAKrB,MAAME,QACbD,EAAIE,KAAK,SAGX,IAAMS,EAAQ,CACZ,CAACK,GAAI,IAAKG,MAAO,uCAAUF,OAAO,IAUpC,OAPIG,KAAKrB,MAAMsB,iBACbV,EAAMT,KAAK,CAACc,GAAI,gBAAiBG,MAAO,sEAAgBF,OAAO,IAC/DN,EAAMT,KAAK,CAACc,GAAI,UAAWG,MAAO,iCAASF,OAAO,KAElDN,EAAMT,KAAK,CAACc,GAAI,QAASG,MAAO,qEAAeF,OAAO,IAItD,kBAAC,IAAMK,SAAP,KACE,yBAAKnB,UAAWH,EAAII,KAAK,MACvB,4BACIgB,KAAKG,YAAYZ,KAGrBS,KAAKrB,MAAME,OAAS,kBAAC,EAAD,CAAUI,QAAUe,KAAKrB,MAAMW,UAAe,U,GAhDvDc,a,OCDfC,E,4MAEJC,MAAQ,CACNC,MAAM,G,EAGRC,mBAAqB,WACnB,EAAKC,SAAS,CACZF,MAAO,EAAKD,MAAMC,Q,EAItBG,iBAAmB,WACjB,EAAKD,SAAS,CACZF,MAAM,K,uDAKR,OACE,yBAAKxB,UAAU,UAEb,kBAAC,EAAD,CACEF,OAAQmB,KAAKM,MAAMC,KACnBjB,QAASU,KAAKU,iBACdT,gBAAiBD,KAAKrB,MAAMsB,kBAG9B,kBAAC,EAAD,CACEf,SAAWc,KAAKQ,mBAChB3B,OAASmB,KAAKM,MAAMC,OAGpBP,KAAKrB,MAAMgC,c,GAjCAP,aA+CNQ,mBANf,SAAyBN,GACvB,MAAO,CACLL,kBAAmBK,EAAMO,KAAKC,SAInBF,CAAyBP,G,OChCzBU,G,wBAlBI,SAAApC,GAEjB,IAAMC,EAAM,CAAC,cAMb,OAJGD,EAAM2B,OACP1B,EAAIE,KAAK,CAACH,EAAM2B,QAIhB,wBACEvB,UAAWH,EAAII,KAAK,KACpBC,QAAS,kBAAMN,EAAMqC,cAAcrC,EAAMsC,OAAOC,MAE9CvC,EAAMsC,OAAOE,QCGNC,EAfK,SAAAzC,GAAK,OACvB,wBAAII,UAAU,eACVJ,EAAM0C,QAAQ7B,KAAI,SAACyB,EAAQvB,GAC3B,OACE,kBAAC,EAAD,CACEuB,OAASA,EACTtB,IAAMD,EACNsB,cAAgBrC,EAAMqC,cACtBV,MAAO3B,EAAM2B,MAAQ3B,EAAM2B,MAAMW,EAAOC,IAAM,YCWzCI,EAnBI,SAAA3C,GAAK,OACtB,yBAAKI,UAAU,cACb,uBAAGA,UAAU,YACX,8BACE,gCAAUJ,EAAM4C,aAAhB,MACC5C,EAAM6C,UAGT,+BAAS7C,EAAM4C,aAAf,iBAAmC5C,EAAM8C,aAG3C,kBAAC,EAAD,CACEnB,MAAO3B,EAAM2B,MACbe,QAAU1C,EAAM0C,QAChBL,cAAgBrC,EAAMqC,kBCIbU,G,YAnBA,SAAA/C,GAEb,IAAMgD,EAAO,CACX,SACAhD,EAAMiD,MAGR,OACE,4BACE3C,QAASN,EAAMM,QACfF,UAAW4C,EAAK3C,KAAK,MACrB6C,SAAUlD,EAAMkD,UAEflD,EAAMgC,YCuCEmB,EAlDM,SAAAnD,GAEnB,IAAMoD,EAAeC,OAAOC,KAAKtD,EAAMuD,SAASC,QAAO,SAACC,EAAOzC,GAI7D,MAH0B,YAAvBhB,EAAMuD,QAAQvC,IACfyC,IAEKA,IACN,GAEH,OACE,yBAAKrD,UAAU,gBACb,4BACIJ,EAAM0D,KAAK7C,KAAI,SAAC8C,EAAU5C,GAC1B,IAAMd,EAAM,CACV,KAC+B,UAA/BD,EAAMuD,QAAQI,EAASpB,IAAkB,WAAa,WACtDvC,EAAMuD,QAAQI,EAASpB,IAAI,KAG7B,OACE,wBACEvB,IAAKD,GAEL,gCAAUA,EAAQ,EAAlB,KACE4C,EAASd,SACX,uBAAGzC,UAAYH,EAAII,KAAK,YAOhC,qFAAe+C,EAAf,iBAAmCpD,EAAM0D,KAAKE,QAE9C,6BACE,kBAAC,EAAD,CACEtD,QAASN,EAAM6D,QACfZ,KAAK,WAFP,0DAIA,kBAAC,IAAD,CAAMhC,GAAI,KACR,kBAAC,EAAD,CACEgC,KAAK,WADP,mIClCKa,G,MARA,SAAA9D,GACd,OACC,yBAAKI,UAAU,UACb,yBAAKA,UAAU,c,kDCJJ2D,MAAMC,OAAO,CAC1BC,QAAS,6CC8CJ,SAASC,EAAiBR,GAC/B,MAAO,CACLT,KChD8B,qBDiD9BS,QAUG,SAASS,EAAmBC,GACjC,MAAO,CACLnB,KC/DgC,uBDgEhCmB,UAIG,SAASC,EAAiBC,GAC/B,MAAO,CACLrB,KCrE8B,qBDsE9BsB,MAAOD,GAIJ,SAASE,EAAaC,EAAalB,GACxC,MAAO,CACLN,KCzE0B,iBD0E1BwB,cAAalB,W,IEvEXmB,E,kLAGFrD,KAAKrB,MAAM2E,cAActD,KAAKrB,MAAM4E,MAAMC,OAAOtC,M,6CAIjDlB,KAAKrB,MAAM8E,c,+BAIX,OACE,yBAAK1E,UAAU,QACb,yBAAKA,UAAU,eACf,2JAGEiB,KAAKrB,MAAM+E,UAAY1D,KAAKrB,MAAM0D,KAC9B,kBAAC,EAAD,MACArC,KAAKrB,MAAMgF,WACT,kBAAC,EAAD,CACEzB,QAAUlC,KAAKrB,MAAMuD,QACrBG,KAAOrC,KAAKrB,MAAM0D,KAClBG,QAASxC,KAAKrB,MAAM8E,YAEtB,kBAAC,EAAD,CACEpC,QAAUrB,KAAKrB,MAAM0D,KAAKrC,KAAKrB,MAAMiF,gBAAgBvC,QACrDG,SAAWxB,KAAKrB,MAAM0D,KAAKrC,KAAKrB,MAAMiF,gBAAgBpC,SACtDR,cAAgBhB,KAAKrB,MAAMkF,gBAC3BpC,WAAazB,KAAKrB,MAAM0D,KAAKE,OAC7BhB,aAAevB,KAAKrB,MAAMiF,eAAiB,EAC3CtD,MAAQN,KAAKrB,MAAMyE,oB,GA/BlBhD,aA6DJQ,mBAnBf,SAAyBN,GACvB,MAAO,CACL4B,QAAS5B,EAAM+B,KAAKH,QACpByB,WAAYrD,EAAM+B,KAAKsB,WACvBC,eAAgBtD,EAAM+B,KAAKuB,eAC3BR,YAAa9C,EAAM+B,KAAKe,YACxBf,KAAM/B,EAAM+B,KAAKA,KACjBqB,QAASpD,EAAM+B,KAAKqB,YAIxB,SAA4BI,GAC1B,MAAO,CACLR,cAAe,SAAApC,GAAE,OAAI4C,GF7BKC,EE6BkB7C,EF5B9C,uCAAO,WAAM4C,GAAN,iBAAAE,EAAA,6DACLF,EAqBK,CACLlC,KC1D8B,uBDmCzB,kBAIoBc,EAAMuB,IAAN,iBAAoBF,EAApB,UAJpB,OAIGG,EAJH,OAKG7B,EAAO6B,EAASC,KAEtBL,EAASjB,EAAiBR,IAPvB,gDASHyB,EAASd,EAAiB,EAAD,KATtB,yDAAP,wDADK,IAAuBe,GE8B1BF,gBAAiB,SAAAO,GAAQ,OAAIN,EFsC1B,SAAyBM,GAC9B,OAAO,SAACN,EAAUO,GAChB,IAAM/D,EAAQ+D,IAAWhC,KACzB,GAAG/B,EAAM8C,YAAa,CACpB,IAAMzD,EAAMqC,OAAOC,KAAK3B,EAAM8C,aAAa,GAC3C,GAA8B,YAA3B9C,EAAM8C,YAAYzD,GACnB,OAIJ,IAAM6B,EAAWlB,EAAM+B,KAAK/B,EAAMsD,gBAC5B1B,EAAU5B,EAAM4B,QAEtB,GAAIV,EAAS8C,gBAAkBF,EAAU,CACnClC,EAAQV,EAASN,MACnBgB,EAAQV,EAASN,IAAM,WAGzB4C,EAASX,EAAa,eAAEiB,EAAW,WAAYlC,IAE/C,IAAMqC,EAAUC,OAAOC,YAAW,YAkBxC,SAAwBnE,GACtB,OAAOA,EAAMsD,eAAiB,IAAMtD,EAAM+B,KAAKE,OAlBrCmC,CAAepE,GAGjBwD,EApCD,CACLlC,KCpF8B,qBDqF9B+C,OAkCgCrE,EAAMsD,eAAiB,IAFjDE,EAxCD,CACLlC,KC/EuB,gBD2HnB4C,OAAOI,aAAaL,KACnB,UAIHrC,EAAQV,EAASN,IAAM,QACvB4C,EAASX,EAAa,eAAEiB,EAAW,SAAUlC,KEvET2B,CAAgBO,KACtDX,UAAW,kBAAMK,EFgCZ,CACLlC,KC1FsB,mBC6DXhB,CAA6CyC,GC9DrDwB,G,mLAGH,OAAO7E,KAAKrB,MAAMoE,OAAOvD,KAAI,SAAA6C,GAC3B,OACE,wBACE1C,IAAK0C,EAAKnB,IAEV,kBAAC,IAAD,CAAStB,GAAI,SAAWyC,EAAKnB,IAC1BmB,EAAKyC,Y,0CAQd9E,KAAKrB,MAAMoG,gB,+BAIX,OACE,yBAAKhG,UAAU,YACb,6BACE,yGAGEiB,KAAKrB,MAAM+E,SAAwC,IAA7B1D,KAAKrB,MAAMoE,OAAOR,OACpC,kBAAC,EAAD,MACC,4BACKvC,KAAKgF,sB,GA9BH5E,cAoDTQ,mBAbf,SAAyBN,GACvB,MAAO,CACLyC,OAAQzC,EAAM+B,KAAKU,OACnBW,QAASpD,EAAM+B,KAAKqB,YAIxB,SAA4BI,GAC1B,MAAO,CACLiB,YAAa,kBAAMjB,EH1CrB,uCAAO,WAAMA,GAAN,iBAAAE,EAAA,6DACLF,EA2CK,CACLlC,KC1D8B,uBDazB,kBAGoBc,EAAMuB,IAAI,eAH9B,OAGGC,EAHH,OAKGnB,EAAS,GAEff,OAAOC,KAAKiC,EAASC,MAAMc,SAAQ,SAACtF,EAAKD,GACvCqD,EAAOjE,KAAK,CACVoC,GAAIvB,EACJmF,KAAK,kCAAD,OAAWpF,EAAQ,QAI3BoE,EAAShB,EAAmBC,IAdzB,kDAgBHe,EAASd,EAAiB,EAAD,KAhBtB,0DAAP,2DG8CapC,CAA6CiE,G,mBCxD5D,SAASK,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAClC,OAAQF,GAASE,GAAkBD,EAGrC,IA6BeE,EA7BD,SAAA3G,GACZ,IAAM4G,EAAY5G,EAAMiD,MAAQ,OAC1BhD,EAAM,CAAC,SACP4G,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,EAAUvG,IACZC,EAAIE,KAAK,WAIT,yBAAKC,UAAWH,EAAII,KAAK,MACvB,2BAAOwG,QAASA,GAAU7G,EAAMoB,OAChC,2BACE6B,KAAM2D,EACNrE,GAAIsE,EACJG,MAAOhH,EAAMgH,MACbC,SAAUjH,EAAMiH,WAIhBV,EAAUvG,GACN,8BAAOA,EAAMkH,cAAgB,oIAC7B,O,iBCEL,SAASC,EAAWC,GACzB,OAAO,SAAAjC,GACLW,YAAW,WACTX,EAASkC,OACD,IAAPD,IAIA,SAASC,IAId,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACLtE,KJ9BuB,eImDpB,SAASuE,EAAYrF,GAC1B,MAAO,CACLc,KJtDwB,eIuDxBd,S,IC5DEsF,E,4MAEJ9F,MAAQ,CACN+F,aAAa,EACbC,aAAc,CACZC,MAAO,CACLZ,MAAO,GACP/D,KAAM,QACN7B,MAAO,QACP8F,aAAc,gHACdV,OAAO,EACPC,SAAS,EACToB,WAAY,CACVC,UAAU,EACVF,OAAO,IAGXG,SAAU,CACRf,MAAO,GACP/D,KAAM,WACN7B,MAAO,uCACP8F,aAAc,+IACdV,OAAO,EACPC,SAAS,EACToB,WAAY,CACVC,UAAU,EACVE,UAAW,M,EAMnBC,aAAe,WACb,EAAKjI,MAAMkC,KACT,EAAKP,MAAMgG,aAAaC,MAAMZ,MAC9B,EAAKrF,MAAMgG,aAAaI,SAASf,OACjC,I,EAIJkB,gBAAkB,WAChB,EAAKlI,MAAMkC,KACT,EAAKP,MAAMgG,aAAaC,MAAMZ,MAC9B,EAAKrF,MAAMgG,aAAaI,SAASf,OACjC,I,EAIJmB,cAAgB,SAAAC,GACdA,EAAMC,kB,EAyBRC,gBAAkB,SAACF,EAAOG,GACxB,IAAMZ,EAAY,eAAQ,EAAKhG,MAAMgG,cAC/Ba,EAAO,eAAQb,EAAaY,IAElCC,EAAQxB,MAAQoB,EAAMK,OAAOzB,MAC7BwB,EAAQ/B,SAAU,EAClB+B,EAAQhC,MAAQ,EAAKkC,gBAAgBF,EAAQxB,MAAOwB,EAAQX,YAE5DF,EAAaY,GAAeC,EAE5B,IAAId,GAAc,EAElBrE,OAAOC,KAAKqE,GAAcrB,SAAQ,SAAAH,GAChCuB,EAAcC,EAAaxB,GAAMK,OAASkB,KAG5C,EAAK5F,SAAS,CACZ6F,eAAcD,iB,8DAvCFV,EAAOa,GACrB,IAAKA,EACH,OAAO,EAGT,IAAIc,GAAU,EAcd,OAZId,EAAWC,WACba,EAA2B,KAAjB3B,EAAM4B,QAAiBD,GAG/Bd,EAAWD,QACbe,EAAUE,IAAGjB,MAAMZ,IAAU2B,GAG3Bd,EAAWG,YACbW,EAAU3B,EAAMpD,QAAUiE,EAAWG,WAAaW,GAG7CA,I,qCAwBO,IAAD,OACb,OAAOtF,OAAOC,KAAKjC,KAAKM,MAAMgG,cAAc9G,KAAI,SAAC0H,EAAaxH,GAC5D,IAAMyH,EAAU,EAAK7G,MAAMgG,aAAaY,GACxC,OACE,kBAAC,EAAD,CACEvH,IAAKuH,EAAcxH,EACnBkC,KAAMuF,EAAQvF,KACd+D,MAAOwB,EAAQxB,MACfR,MAAOgC,EAAQhC,MACfC,QAAS+B,EAAQ/B,QACjBrF,MAAOoH,EAAQpH,MACfsF,iBAAkB8B,EAAQX,WAC1BX,aAAcsB,EAAQtB,aACtBD,SAAU,SAAAmB,GAAK,OAAI,EAAKE,gBAAgBF,EAAOG,W,+BAOrD,OACE,yBAAKnI,UAAU,QACb,6BACE,kGAEA,0BAAM0I,SAAUzH,KAAK8G,cAAe/H,UAAU,YAE1CiB,KAAK0H,eAEP,kBAAC,EAAD,CACE9F,KAAK,UACL3C,QAASe,KAAK4G,aACd/E,UAAW7B,KAAKM,MAAM+F,aAHxB,kCAQA,kBAAC,EAAD,CACEzE,KAAK,UACL3C,QAASe,KAAK6G,gBACdhF,UAAW7B,KAAKM,MAAM+F,aAHxB,uH,GApIOjG,aAwJJQ,kBAAQ,MANvB,SAA4BkD,GAC1B,MAAO,CACLjD,KAAM,SAAC0F,EAAOG,EAAUiB,GAAlB,OAA8B7D,EDzJjC,SAAcyC,EAAOG,EAAUiB,GACpC,8CAAO,WAAM7D,GAAN,uBAAAE,EAAA,6DACT4D,QAAQC,IAAI,iBACFC,EAAW,CACfvB,QAAOG,WACPqB,mBAAmB,GAGjBC,EAAM,wGAENL,IACFK,EAAI,qHAVD,SAakBtF,IAAMuF,KAAKD,EAAKF,GAblC,OAaC5D,EAbD,OAcCC,EAAOD,EAASC,KAEhB+D,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAA6B,IAAjBjE,EAAKkE,WAE5DpC,aAAaqC,QAAQ,QAASnE,EAAKoE,SACnCtC,aAAaqC,QAAQ,SAAUnE,EAAKqE,SACpCvC,aAAaqC,QAAQ,iBAAkBJ,GAEvCpE,EAASqC,EAAYhC,EAAKoE,UAC1BzE,EAASgC,EAAW3B,EAAKkE,YAvBpB,4CAAP,sDCwJ+CxH,CAAK0F,EAAOG,EAAUiB,QAIxD/G,CAAkCwF,GCnIlCqC,G,YA1BA,SAAA9J,GACb,IAAM6G,EAAO,UAAM7G,EAAMoB,MAAZ,YAAqB0F,KAAKC,UAEvC,OACE,yBAAK3G,UAAU,UACb,2BAAOyG,QAASA,GAAU7G,EAAMoB,OAChC,4BACEmB,GAAIsE,EACJG,MAAOhH,EAAMgH,MACbC,SAAUjH,EAAMiH,UAEdjH,EAAM+J,QAAQlJ,KAAI,SAACmJ,EAAQjJ,GAC3B,OACE,4BACEiG,MAAOgD,EAAOhD,MACdhG,IAAKgJ,EAAOhD,MAAQjG,GAEnBiJ,EAAOxH,aCpBf,SAASyH,EAAcC,EAAQrC,GACpC,OAAO,2BACFqC,GADL,IAEErC,aACArB,OAAQqB,EACRpB,SAAS,EACTO,MAAO,KAIJ,SAASmD,EAASnD,GAAyB,IAAlBa,EAAiB,uDAAN,KACzC,IAAIA,EACF,OAAO,EAGT,IAAIc,GAAU,EAMd,OAJId,EAAWC,WACba,EAA2B,KAAjB3B,EAAM4B,QAAiBD,GAG5BA,EAGF,SAASyB,EAAazC,GAC3B,IAAID,GAAc,EAElB,IAAK,IAAIc,KAAWb,EACdA,EAAa0C,eAAe7B,KAC9Bd,EAAcC,EAAaa,GAAShC,OAASkB,GAIjD,OAAOA,ECjCT,IAEe4C,GAFG,SAAAtK,GAAK,OAAIA,EAAMgC,UCUjC,SAASuI,GAAoBvE,GAC3B,OAAOiE,EAAc,CACjB7I,MAAM,8CAAD,OAAa4E,GAClBkB,aAAc,6JACd3E,GAAIyD,GACH,CAAC8B,UAAU,IAGlB,SAAS0C,KACP,MAAO,CACL3H,SAAUoH,EAAc,CACtB7I,MAAO,kFACP8F,aAAc,kJACb,CAACY,UAAU,IACd2C,QAASF,GAAoB,GAC7BG,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,I,IAI3BM,G,4MAEJlJ,MAAQ,CACN+F,aAAa,EACb/B,cAAe,EACfgC,aAAc6C,M,EAGhBrC,cAAgB,SAAAC,GACdA,EAAMC,kB,EAGRyC,mBAAqB,SAAA1C,GACnBA,EAAMC,iBADsB,MAG2B,EAAK1G,MAAMgG,aAA3D9E,EAHqB,EAGrBA,SAAU4H,EAHW,EAGXA,QAASC,EAHE,EAGFA,QAASC,EAHP,EAGOA,QAASC,EAHhB,EAGgBA,QAEtCG,EAAe,CACnBlI,SAAUA,EAASmE,MACnBzE,GAAI,EAAKvC,MAAM0D,KAAKE,OAAS,EAC7B+B,cAAe,EAAKhE,MAAMgE,cAC1BjD,QAAS,CACP,CAACF,KAAMiI,EAAQzD,MAAOzE,GAAIkI,EAAQlI,IAClC,CAACC,KAAMkI,EAAQ1D,MAAOzE,GAAImI,EAAQnI,IAClC,CAACC,KAAMmI,EAAQ3D,MAAOzE,GAAIoI,EAAQpI,IAClC,CAACC,KAAMoI,EAAQ5D,MAAOzE,GAAIqI,EAAQrI,MAItC,EAAKvC,MAAMgL,mBAAmBD,GAE9B,EAAKjJ,SAAS,CACZ4F,aAAa,EACb/B,cAAe,EACfgC,aAAc6C,Q,EAIlBS,kBAAoB,SAAA7C,GAClBA,EAAMC,iBAEN,EAAKvG,SAAS,CACZ4F,aAAa,EACb/B,cAAe,EACfgC,aAAc6C,OAEhB,EAAKxK,MAAMkL,oB,EAIbC,cAAgB,SAACnE,EAAOuB,GACtB,IAAMZ,EAAY,eAAQ,EAAKhG,MAAMgG,cAC/Ba,EAAO,eAAQb,EAAaY,IAElCC,EAAQ/B,SAAU,EAClB+B,EAAQxB,MAAQA,EAChBwB,EAAQhC,MAAQ2D,EAAS3B,EAAQxB,MAAOwB,EAAQX,YAEhDF,EAAaY,GAAeC,EAE5B,EAAK1G,SAAS,CACZ6F,eACAD,YAAa0C,EAAazC,M,EAyB9ByD,oBAAsB,SAAAhD,GACpB,EAAKtG,SAAS,CACZ6D,eAAgByC,EAAMK,OAAOzB,S,+DAvBf,IAAD,OACf,OAAO3D,OAAOC,KAAKjC,KAAKM,MAAMgG,cAAc9G,KAAI,SAAC0H,EAAaxH,GAC5D,IAAMyH,EAAU,EAAK7G,MAAMgG,aAAaY,GAExC,OACE,kBAAC,GAAD,CAAWvH,IAAKuH,EAAcxH,GAC5B,kBAAC,EAAD,CACEK,MAAOoH,EAAQpH,MACf4F,MAAOwB,EAAQxB,MACfR,MAAOgC,EAAQhC,MACfE,iBAAkB8B,EAAQX,WAC1BpB,QAAS+B,EAAQ/B,QACjBS,aAAcsB,EAAQtB,aACtBD,SAAU,SAAAmB,GAAK,OAAI,EAAK+C,cAAc/C,EAAMK,OAAOzB,MAAOuB,MAEhD,IAAVxH,EAAc,6BAAS,W,+BAa/B,IAAMsK,EAAS,kBAAC,EAAD,CACbjK,MAAM,+IACN4F,MAAO3F,KAAKM,MAAMgE,cAClBsB,SAAU5F,KAAK+J,oBACfrB,QAAS,CACP,CAACvH,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,MAIrB,OACE,yBAAK5G,UAAU,eACb,6BACE,+GAEA,0BAAM0I,SAAUzH,KAAK8G,eAEjB9G,KAAKiK,iBAELD,EAEF,kBAAC,EAAD,CACEpI,KAAK,UACL3C,QAASe,KAAKyJ,mBACd5H,UAAW7B,KAAKM,MAAM+F,aAHxB,yFAQA,kBAAC,EAAD,CACEzE,KAAK,UACL3C,QAASe,KAAK4J,kBACd/H,SAAqC,IAA3B7B,KAAKrB,MAAM0D,KAAKE,QAH5B,8E,GA7HcnC,aAwJXQ,oBAbf,SAAyBN,GACvB,MAAO,CACL+B,KAAM/B,EAAMqC,OAAON,SAIvB,SAA4ByB,GAC1B,MAAO,CACL6F,mBAAoB,SAAAO,GAAI,OAAIpG,EC/KzB,SAA4BoG,GACjC,MAAO,CACLtI,KVKgC,uBUJhCsI,QD4KqCP,CAAmBO,KACxDL,iBAAkB,kBAAM/F,EClK1B,uCAAO,WAAOA,EAAUO,GAAjB,SAAAL,EAAA,sEACCtB,EAAMuF,KAAK,cAAe5D,IAAW1B,OAAON,MAD7C,OAELyB,EARK,CACLlC,KVD+B,wBUM1B,2CAAP,6DDsKahB,CAA6C4I,IElLtDW,G,kLAEFnK,KAAKrB,MAAMqH,W,+BAIX,OAAO,kBAAC,IAAD,CAAUpG,GAAI,U,GANJQ,aAgBNQ,mBAAQ,MANvB,SAA4BkD,GAC1B,MAAO,CACLkC,OAAQ,kBAAMlC,EAASkC,SAIZpF,CAAkCuJ,ICV3CC,G,kLAGFpK,KAAKrB,MAAM0L,c,+BAKX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWpE,IAC/B,kBAAC,IAAD,CAAOmE,KAAK,YAAYC,UAAWnH,IACnC,kBAAC,IAAD,CAAOkH,KAAK,IAAIC,UAAW3F,IAC3B,kBAAC,IAAD,CAAUjF,GAAG,OAgBjB,OAZGI,KAAKrB,MAAMsB,kBACZqK,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAWhB,KACvC,kBAAC,IAAD,CAAOe,KAAK,YAAYC,UAAWnH,IACnC,kBAAC,IAAD,CAAOkH,KAAK,UAAUC,UAAWL,KACjC,kBAAC,IAAD,CAAOI,KAAK,IAAI1K,OAAK,EAAC2K,UAAW3F,IACjC,kBAAC,IAAD,CAAUjF,GAAG,QAMjB,kBAAC,EAAD,KACI0K,O,GA/BQlK,aAiDHqK,mBAAW7J,aAZ1B,SAAyBN,GACvB,MAAO,CACLL,kBAAmBK,EAAMO,KAAKC,UAIlC,SAA4BgD,GAC1B,MAAO,CACLuG,UAAW,kBAAMvG,GRPZ,SAAAA,GACL,IAAMhD,EAAQmF,aAAayE,QAAQ,SACnC,GAAK5J,EAEE,CACL,IAAMoH,EAAiB,IAAIC,KAAKlC,aAAayE,QAAQ,mBACjDxC,GAAkB,IAAIC,KACxBrE,EAASkC,MAETlC,EAASqC,EAAYrF,IACrBgD,EAASgC,GAAYoC,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAP1EtE,EAASkC,YQQWpF,CAA6CwJ,KChDnDO,QACW,cAA7BnG,OAAOoG,SAASC,UAEe,UAA7BrG,OAAOoG,SAASC,UAEhBrG,OAAOoG,SAASC,SAAStH,MACvB,2D,aCPAuH,GAAe,CACnB/H,OAAQ,GACRW,SAAS,EACTR,MAAO,KACPhB,QAAS,GACTyB,YAAY,EACZC,eAAgB,EAChBR,YAAa,KACbf,KAAM,M,aCjBFyI,GAAe,CACnBzI,KAAM,ICDR,IAAMyI,GAAe,CACnBhK,MAAO,MCEMiK,oBAAgB,CAC7B1I,KHgBa,WAAoD,IAA/B/B,EAA8B,uDAAtBwK,GAAcE,EAAQ,uCAChE,OAAOA,EAAOpJ,MACZ,IdxB8B,qBcyB5B,OAAO,2BACFtB,GADL,IACYoD,SAAS,IAEvB,Id3BgC,uBc4B9B,OAAO,2BACFpD,GADL,IACYoD,SAAS,EAAOX,OAAQiI,EAAOjI,SAE7C,Id9B8B,qBc+B5B,OAAO,2BACFzC,GADL,IACYoD,SAAS,EAAOR,MAAO8H,EAAO9H,QAE5C,IdjC8B,qBckC5B,OAAO,2BACF5C,GADL,IACYoD,SAAS,EAAOrB,KAAM2I,EAAO3I,OAE3C,IdnC0B,iBcoCxB,OAAO,2BACF/B,GADL,IACY8C,YAAa4H,EAAO5H,YAAalB,QAAS8I,EAAO9I,UAE/D,IdtCuB,ccuCrB,OAAO,2BACF5B,GADL,IACYqD,YAAY,IAE1B,IdzC8B,qBc0C5B,OAAO,2BACFrD,GADL,IACY8C,YAAa,KAAMQ,eAAgBoH,EAAOrG,SAExD,Id5CsB,ac6CpB,OAAO,2BACFrE,GADL,IAEEsD,eAAgB,EAChBR,YAAa,KACbO,YAAY,EACZzB,QAAS,KAEb,QACE,OAAO5B,IGtDXqC,OFDa,WAAsD,IAA/BrC,EAA8B,uDAAtBwK,GAAcE,EAAQ,uCAClE,OAAQA,EAAOpJ,MACb,IfEgC,uBeD9B,OAAO,2BACFtB,GADL,IAEE+B,KAAK,GAAD,oBAAM/B,EAAM+B,MAAZ,CAAkB2I,EAAOd,SAEjC,IfF+B,sBeG7B,OAAO,2BACF5J,GADL,IACY+B,KAAM,KAEpB,QACE,OAAO/B,IEVXO,KDFa,WAAoD,IAA/BP,EAA8B,uDAAtBwK,GAAcE,EAAQ,uCAChE,OAAQA,EAAOpJ,MACb,IhBKwB,egBJtB,OAAO,2BACFtB,GADL,IACYQ,MAAOkK,EAAOlK,QAE5B,IhBEuB,cgBDrB,OAAO,2BACFR,GADL,IACYQ,MAAO,OAErB,QACE,OAAOR,M,SENP2K,GACc,kBAAXzG,QACPA,OAAO0G,qCACL1G,OAAO0G,qCAAqC,IACvCC,KAEHC,GAAQC,aACZC,GACAL,GACEM,aAAgBC,QAIdC,GACJ,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAKNM,IAASC,OAAOF,GAAKG,SAASC,eAAe,SLmGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlJ,GACL0E,QAAQ1E,MAAMA,EAAMmJ,c","file":"static/js/main.50e08203.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MenuToggle.css';\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    'MenuToggle',\r\n    'fa'\r\n  ]\r\n\r\n  if(props.isOpen) {\r\n    cls.push('fa-times')\r\n    cls.push('open')\r\n  } else {\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className={cls.join(' ')}\r\n      onClick={props.onToggle}\r\n    />\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => <div className=\"Backdrop\" onClick={props.onClick} />\r\n\r\nexport default Backdrop;","import React, {Component} from 'react';\r\nimport './Drawer.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\n\r\nclass Drawer extends Component {\r\n\r\n  clickHandler = () => {\r\n    this.props.onClose()\r\n  }\r\n\r\n  renderLinks(links) {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={'active'}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const cls = [\"Drawer\"];\r\n\r\n    if(!this.props.isOpen) {\r\n      cls.push(\"close\")\r\n    }\r\n\r\n    const links = [\r\n      {to: '/', label: 'Список', exact: true}, \r\n    ]\r\n\r\n    if (this.props.isAuthenticated) {\r\n      links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n      links.push({to: '/logout', label: 'Выйти', exact: false})\r\n    } else {\r\n      links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(' ')}>\r\n          <ul>\r\n            { this.renderLinks(links) }\r\n          </ul>\r\n        </nav>\r\n        { this.props.isOpen ? <Backdrop onClick={ this.props.onClose } /> : null }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport './Layout.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n  \r\n  state = {\r\n    menu: false\r\n  }\r\n  \r\n  toggleMenuHanndler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  } \r\n  \r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Layout\">\r\n\r\n        <Drawer \r\n          isOpen={this.state.menu}\r\n          onClose={this.menuCloseHandler}\r\n          isAuthenticated={this.props.isAuthenticated}\r\n        />\r\n\r\n        <MenuToggle \r\n          onToggle={ this.toggleMenuHanndler }\r\n          isOpen={ this.state.menu }\r\n        />\r\n\r\n        { this.props.children }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n  const cls = [\"AnswerItem\"]\r\n\r\n  if(props.state) {\r\n    cls.push([props.state])\r\n  }\r\n\r\n  return (\r\n    <li \r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      { props.answer.text }\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react';\r\nimport './AnswersList.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n  <ul className=\"AnswersList\">\r\n    { props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswerItem \r\n          answer={ answer }\r\n          key={ index }\r\n          onAnswerClick={ props.onAnswerClick }\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      )\r\n    }) }\r\n  </ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react';\r\nimport './ActiveQuiz.css';\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => (\r\n  <div className=\"ActiveQuiz\">\r\n    <p className=\"Question\">\r\n      <span>\r\n        <strong>{ props.answerNumber }. </strong>\r\n        {props.question}\r\n      </span>\r\n\r\n      <small>{ props.answerNumber } из { props.quizLength }</small>\r\n    </p>\r\n\r\n    <AnswersList \r\n      state={props.state}\r\n      answers={ props.answers }\r\n      onAnswerClick={ props.onAnswerClick }\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  \r\n  const clas = [\r\n    'Button',\r\n    props.type\r\n  ]\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={clas.join('  ')}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport './FinishedQuiz.css';\r\nimport Button from '../UI/Button/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishedQuiz = props => {\r\n\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if(props.results[key] === 'success') {\r\n      total++\r\n    }\r\n    return total;\r\n  }, 0)\r\n\r\n  return (\r\n    <div className=\"FinishedQuiz\">\r\n      <ul>\r\n        { props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa', \r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            props.results[quizItem.id]+'1'\r\n          ]\r\n\r\n          return (\r\n            <li \r\n              key={index}\r\n            >\r\n              <strong>{ index + 1 } </strong>\r\n              { quizItem.question }\r\n              <i className={ cls.join(' ') } />\r\n            </li>\r\n          )\r\n\r\n        }) }\r\n      </ul>\r\n\r\n      <p>Правильно { successCount } из { props.quiz.length }</p>\r\n\r\n      <div>\r\n        <Button \r\n          onClick={props.onRetry}\r\n          type=\"primary\"\r\n        >Повторить</Button>\r\n        <Link to={'/'}>\r\n          <Button \r\n            type=\"success\"\r\n          >Перейти в список тестов</Button>\r\n        </Link>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz;","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = props => {\r\n return (\r\n  <div className=\"center\">\r\n    <div className=\"Loader\"></div>\r\n  </div>\r\n )   \r\n}\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://react-quiz-1805e.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz';\r\nimport {\r\n  FETCH_QUIZES_START, \r\n  FETCH_QUIZES_SUCCESS, \r\n  FETCH_QUIZES_ERROR, \r\n  FETCH_QUIZ_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from './action.types'\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n     try {\r\n      const response = await axios.get('quizes.json')\r\n\r\n      const quizes = []\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        })\r\n      })\r\n\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`quizes/${quizId}.json`);\r\n      const quiz = response.data;\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz;\r\n    if(state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if(state.answerState[key] === 'success') {\r\n        return \r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if(!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n\r\n\r\n    } else {\r\n      results[question.id] = 'error';\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, {Component} from 'react';\r\nimport './Quiz.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\nclass Quiz extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.retryQuiz();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz\">\r\n        <div className=\"QuizWrapper\">\r\n        <h1>Ответьте на все вопросы</h1> \r\n\r\n        {\r\n          this.props.loading || !this.props.quiz\r\n            ? <Loader />\r\n            : this.props.isFinished \r\n              ? <FinishedQuiz \r\n                  results={ this.props.results }\r\n                  quiz={ this.props.quiz }\r\n                  onRetry={this.props.retryQuiz}\r\n                />\r\n              : <ActiveQuiz\r\n                  answers={ this.props.quiz[this.props.activeQuestion].answers }\r\n                  question={ this.props.quiz[this.props.activeQuestion].question }\r\n                  onAnswerClick={ this.props.quizAnswerClick }\r\n                  quizLength={ this.props.quiz.length }\r\n                  answerNumber={ this.props.activeQuestion + 1 }\r\n                  state={ this.props.answerState }\r\n                />\r\n        }\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results, \r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState, \r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react';\r\nimport './QuizList.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizes } from '../../store/actions/quiz';\r\n\r\n class QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li \r\n          key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchQuizes()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"QuizList\">\r\n        <div>\r\n          <h1>Список Тестов</h1>  \r\n\r\n          { \r\n            this.props.loading && this.props.quizes.length !== 0\r\n              ? <Loader /> \r\n              :  <ul>\r\n                    { this.renderQuizes() }\r\n                 </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\r\n","import React from 'react';\r\nimport './Input.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n  return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || 'text';\r\n  const cls = [\"Input\"];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(\"invalid\")\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(' ')}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input \r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {\r\n        isInvalid(props) \r\n          ? <span>{props.errorMessage || 'Введите верное значение'}</span> \r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Input;","import axios from 'axios';\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from './action.types';\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\nconsole.log('in dispatch!!');\r\n    const authData = {\r\n      email, password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC2y5nZOsKZLS42_rPg3SaFLDybzIlLHuw'\r\n\r\n    if (isLogin) {\r\n      url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC2y5nZOsKZLS42_rPg3SaFLDybzIlLHuw'\r\n    }\r\n\r\n    const response = await axios.post(url, authData);\r\n    const data = response.data;\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport './Auth.css'\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport is from 'is_js'\r\nimport { connect } from 'react-redux';\r\nimport {auth} from '../../store/actions/auth'\r\n\r\nclass Auth extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: '',\r\n        type: 'email',\r\n        label: 'Email',\r\n        errorMessage: 'Введите корректный email',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: '',\r\n        type: 'password',\r\n        label: 'Пароль',\r\n        errorMessage: 'Введите корректный пароль',\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  };\r\n  \r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    )\r\n  }\r\n\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    )\r\n  }\r\n  \r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid\r\n    })\r\n\r\n    this.setState({\r\n      formControls, isFormValid\r\n    })  \r\n  }\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      return (\r\n        <Input \r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\">\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className=\"AuthForm\">\r\n           \r\n            { this.renderInputs() }\r\n\r\n            <Button \r\n              type=\"success\" \r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Войти\r\n            </Button>\r\n\r\n            <Button \r\n              type=\"primary\" \r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react';\r\nimport './Select.css';\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`;\r\n\r\n  return (\r\n    <div className=\"Select\">\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      >\r\n        { props.options.map((option, index) => {\r\n          return (\r\n            <option\r\n              value={option.value}\r\n              key={option.value + index}\r\n            >\r\n              {option.text}\r\n            </option>\r\n          )\r\n        }) }\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function validate(value, validation=null) {\r\n  if(!validation) {\r\n    return true\r\n  }\r\n\r\n  let isValid = true;\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== '' && isValid\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true;\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid\r\n    }\r\n  }\r\n\r\n  return isFormValid;\r\n}","const Auxiliary = props => props.children;\r\n\r\nexport default Auxiliary;","import React, {Component} from 'react';\r\nimport './QuizCreator.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport { createControl, validate, validateForm } from '../../form/formFramework';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport { connect } from 'react-redux';\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create';\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n      label: `Вариант ${number}`,\r\n      errorMessage: 'Значение не может быть пустым',\r\n      id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Введите вопрос',\r\n      errorMessage: 'Вопрос не может быть пустым'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n  \r\n  submitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n  \r\n  addQuestionHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id},\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault();\r\n      \r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls, \r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n \r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n      \r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input \r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          { index === 0 ? <hr /> : null }\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Выберите правильный ответ\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4},\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className=\"QuizCreator\">\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n            \r\n            { this.renderControls() }\r\n\r\n            { select }\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './action.types';\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {logout} from '../../store/actions/auth';\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'}/>\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport QuizList from './containers/QuizList/QuizList';\r\nimport Auth from './containers/Auth/Auth';\r\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\r\nimport { connect } from 'react-redux';\r\nimport Logout from './components/Logout/Logout';\r\nimport {autoLogin} from './store/actions/auth';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.autoLogin();\r\n  }\r\n\r\n  render() {\r\n\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/quiz/:id\" component={Quiz} />\r\n        <Route path=\"/\" component={QuizList} />\r\n        <Redirect to='/'/>\r\n      </Switch>\r\n    )\r\n\r\n    if(this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\r\n          <Route path=\"/quiz/:id\" component={Quiz} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={QuizList} />\r\n          <Redirect to='/'/>\r\n        </Switch>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        { routes }\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    autoLogin: () => dispatch(autoLogin())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { \r\n  FETCH_QUIZES_START, \r\n  FETCH_QUIZES_SUCCESS, \r\n  FETCH_QUIZES_ERROR, \r\n  FETCH_QUIZ_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY \r\n} from \"../actions/action.types\"\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {}, \r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null, \r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS: \r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR: \r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE: \r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n    case FINISH_QUIZ: \r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.number\r\n      }\r\n    case QUIZ_RETRY: \r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {}\r\n      }     \r\n    default: \r\n      return state\r\n  }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from '../actions/action.types';\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION: \r\n      return {\r\n        ...state, \r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state, quiz: []\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/action.types';\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state, token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport quizReducer from './quiz';\r\nimport createReducer from './create';\r\nimport authReducer from './auth';\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root') );\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}